(* Gramática *)

(* --- Header: código que se copia al inicio del .py generado --- *)
{ 
  from src.runtime.token_types import *
}

(* --- Definiciones de clases de caracteres --- *)
let delim   = [' ' '\t' '\n']
let ws      = delim+
let letter  = ['A'-'Z''a'-'z']
let digit   = ['0'-'9']
let alnum   = letter | digit
let id      = letter (alnum)*
let number  = digit+ ('.' digit+)? ('E' ['+' '-' ]? digit+ )?
let delim = [' ' '\t' '\n']  

(* --- Reglas de tokenización --- *)
rule tokens =
    ws                          { return None }
  | id                          { return ID }
  | number                      { return NUMBER }
  | ';'                         { return SEMICOLON }
  | ":="                        { return ASSIGNOP }
  | '<'                         { return LT }
  | '='                         { return EQ }
  | '+'                         { return PLUS }
  | '-'                         { return MINUS }
  | '*'                         { return TIMES }
  | '/'                         { return DIV }
  | '('                         { return LPAREN }
  | ')'                         { return RPAREN }
  | eof                         { return EOF }
  | '\n'                        { return EOL }
  | ';' { … }  
  | ":=" { … }  

(* --- Trailer: código que se copia al final del .py generado --- *)
{ 
  /* Aquí podrías añadir cualquier cleanup o funciones auxiliares */
}